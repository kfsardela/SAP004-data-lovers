body {
  background-image: url(fundo_paisagem.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

.titulo {
  text-align: center;
  font-size: 100px;
  margin: 30px;
}

.nav {
  position: absolute;
  top: auto;
  right: 20px;
  margin-top: 20px;

}

.item {
  display: inline;
  margin: 0 0 0 15px;
  border-radius: 5px;
  padding: 5px;
}

.item a {
  text-transform: uppercase;
  color: rgb(17, 24, 87);
  font-weight: bold;
  font-size: 20px;
  text-decoration: none;
}

.item a:hover {
  color: rgb(30, 40, 131);
}

.filtros {
  display: inline-block;
  padding: 10px 0 0 15px;
}

.option {
  color: rgb(17, 24, 87);
  font-weight: bold;
}

.filtrar {
  padding: 150px 0 0 15px;
  color: rgb(17, 24, 87);
  font-size: 22px;
}

.legend {
  color: rgb(17, 24, 87);
  font-weight: bold;
  font-size: 18px;
  ;
}

.card-container {
  width: 300px;
  height: 200px;
  /* indicamos a profundidade do nosso container. Isso é feito com a propriedade perspective, que indica o quanto um objeto está longe do usuário. A profundidade é aplicada aos elementos filhos, e não ao próprio elemento com a propriedade de perspectiva.*/
  perspective: 1000px;
}

.card {
  width: 100%;
  height: 100%;
  /*Para que ele mantenha a profundidade que definimos em seu elemento pai (flip-container) quando formos girá-lo, passamos o valor preserve-3d à propriedade transform-style. */
  transform-style: preserve-3d;
  transition: transform 0.8s;
  /*Para que as duas fiquem na mesma posição, vamos definir front e back com position: absolute. Para respeitarem a posição de seu elemento pai (card-container), vamos definir sua posição como relative.*/
  position: relative;
}

.card-container:hover .card {
  /*Como queremos que ele mostre a outra face, girando na horizontal, vamos usar a propriedade transform e girá-lo 180 graus no eixo Y.*/
  transform: rotateY(180deg);
}

.front,
.back {
  position: absolute;
  width: 100%;
  height: 100%;
  /*Para finalizar este efeito, podemos simplesmente indicar ao CSS que não queremos que seja exibida a parte de trás dos elementos. Assim veremos apenas o elemento que estiver de frente para nós. Fazemos isso passando o valor hidden para a propriedade backface-visibility.*/
  backface-visibility: hidden;
}

.front {
  background-color: rgba(223, 221, 221, 0.4);

}

.back {
  background-color: rgba(223, 221, 221, 0.4);

  /*Primeiro vamos girar back a 180 graus. Como ele inicialmente estará de costas para nós, vamos rotacioná-lo.*/
  transform: rotateY(180deg);
}

#pokemonList .card-container {
  width: 160px;
  height: 250px;
  text-align: center;
  display: inline-block;
  margin: 10px;
}

footer {
  background-image: linear-gradient(to right, #639d25, #427768);
  height: 100px;
  color: beige;
  text-align: center;
  padding-top: 100px;
}
